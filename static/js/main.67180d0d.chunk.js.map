{"version":3,"sources":["components/inputs/radioInput/radioInput.js","components/inputs/numberInput/numberInput.js","components/inputs/metricSwitcher/metricSwitcher.js","components/inputs/selectInput/selectInput.js","components/result/result.js","components/calculator/group/group.js","components/calculator/group/groupData/typeData.js","components/calculator/group/groupData/brandData.js","components/calculator/calculator.js","App.js","index.js"],"names":["NumberInput","id","name","value","onClick","htmlFor","label","type","mgAmount","price","unit","element","inputRef","useRef","single","className","double","String","element_single","element_double","ref","current","dataset","data-name","data-price","min","max","onChange","placeholder","autocomplete","MetricSwitcher","props","useState","setUnit","update","console","log","leftMetric","rightMetric","SelectInput","suffix","options","optionsList","map","option","Result","fipType","fipTypeMg","brandName","weight","dailyDosage","setDailyDosage","numOfVials","setNumOfVials","totalPrice","setTotalPrice","checkNum","num","isFinite","toLocaleString","useEffect","dailyDosageAmt","numOfVialsAmt","totalPriceAmt","brand","Math","round","Number","EPSILON","resultBrandName","Group","title","description","children","typeData","brandData","Calculator","setfipType","setfipTypeMg","setWeight","setBrand","isLBS","setIsLBS","group_fipType","group_cat_weight","group_brands","a","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67180d0d.chunk.js","sourcesContent":["import React, { useRef } from 'react';\r\nimport './css/radioInput.css';\r\n\r\nconst NumberInput = ({ id, name, value, htmlFor, label, onClick, type, mgAmount, price, unit, element }) => {\r\n\tlet inputRef = useRef();\r\n\r\n\t// const checkIfActive = function(e) {\r\n\t// \tconst input = document.querySelector(`input#${id}`);\r\n\r\n\t// };\r\n\r\n\tconst single = (\r\n\t\t<div className=\"checkbox\">\r\n\t\t\t<span className=\"type\">{type}</span>\r\n\t\t\t<span className=\"mg-amount\">{`$${price} per ${unit}`}</span>\r\n\t\t</div>\r\n\t);\r\n\r\n\tconst double = (\r\n\t\t<div className=\"checkbox\">\r\n\t\t\t<span className=\"type\">{type}</span>\r\n\t\t\t<span className=\"mg-amount\">\r\n\t\t\t\t{mgAmount === typeof String ? mgAmount : `${mgAmount}mg/ml | $${price}/${unit}`}\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t);\r\n\r\n\tconst element_single = (\r\n\t\t<div className=\"checkbox\">\r\n\t\t\t<span className=\"type\">{type}</span>\r\n\t\t</div>\r\n\t);\r\n\r\n\tconst element_double = !mgAmount ? single : double;\r\n\r\n\t// const double_alt = (\r\n\t// \t<div className=\"checkbox\">\r\n\t// \t\t<span className=\"type\">{type}</span>\r\n\t// \t\t<span className=\"mg-amount\">{mgAmount}</span>\r\n\t// \t</div>\r\n\t// );\r\n\r\n\t// const double = <Fragment>{mgAmount !== Number ? double_alt : double_MgAmount}</Fragment>;\r\n\r\n\treturn (\r\n\t\t<div htmlFor={id} className=\"radio-input-wrapper\">\r\n\t\t\t<label className=\"label\">\r\n\t\t\t\t<input\r\n\t\t\t\t\tref={inputRef}\r\n\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\tonClick({\r\n\t\t\t\t\t\t\tvalue : inputRef.current.value,\r\n\t\t\t\t\t\t\tprice : inputRef.current.dataset.price,\r\n\t\t\t\t\t\t\tname  : inputRef.current.dataset.name\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\tid={id}\r\n\t\t\t\t\tname={name}\r\n\t\t\t\t\tdata-name={type}\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tdata-price={price}\r\n\t\t\t\t/>\r\n\t\t\t\t{element === 'single' ? element_single : element_double}\r\n\t\t\t</label>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default NumberInput;\r\n","import React, { useRef } from 'react';\r\nimport './css/numberInput.css';\r\n\r\nconst NumberInput = ({ id, name, value, htmlFor, label, min, max, onChange, placeholder }) => {\r\n\tlet inputRef = useRef();\r\n\r\n\treturn (\r\n\t\t<div className=\"number-input-wrapper\">\r\n\t\t\t<input\r\n\t\t\t\tref={inputRef}\r\n\t\t\t\tautocomplete=\"off\"\r\n\t\t\t\tonChange={() => onChange(inputRef.current.value)}\r\n\t\t\t\ttype=\"number\"\r\n\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\tid={id}\r\n\t\t\t\tname={name}\r\n\t\t\t\tmin={min}\r\n\t\t\t\tmax={max}\r\n\t\t\t/>\r\n\t\t\t<label htmlFor={htmlFor}>{label}</label>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default NumberInput;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './css/metricSwitcher.css';\r\n\r\nconst MetricSwitcher = (props) => {\r\n\tconst [ unit, setUnit ] = useState('lbs');\r\n\r\n\tconst update = function(unit) {\r\n\t\tsetUnit(unit);\r\n\t\tprops.onClick(unit);\r\n\t\tconsole.log('updates');\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"metric-type-container\">\r\n\t\t\t<span\r\n\t\t\t\tonClick={() => update('lbs')}\r\n\t\t\t\tid={props.leftMetric}\r\n\t\t\t\tclassName={`metric-type ${unit === 'lbs' && 'metric-active'}`}\r\n\t\t\t>\r\n\t\t\t\t{props.leftMetric}\r\n\t\t\t</span>\r\n\t\t\t<span\r\n\t\t\t\tonClick={() => update('kgs')}\r\n\t\t\t\tid={props.rightMetric}\r\n\t\t\t\tclassName={`metric-type ${unit === 'kgs' && 'metric-active'}`}\r\n\t\t\t>\r\n\t\t\t\t{props.rightMetric}\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MetricSwitcher;\r\n","import React, { useRef } from 'react';\r\n\r\nconst SelectInput = ({ id, name, value, htmlFor, label, unit, suffix, min, max, options, onChange }) => {\r\n\tconst inputRef = useRef();\r\n\r\n\tconst optionsList = options.map((option) => (\r\n\t\t<option value={`${option}`}>\r\n\t\t\t{option} {suffix}/{unit}\r\n\t\t</option>\r\n\t));\r\n\treturn (\r\n\t\t<div className=\"select-input-wrapper\">\r\n\t\t\t<label htmlFor={htmlFor}>{label}</label>\r\n\r\n\t\t\t<select ref={inputRef} onChange={() => onChange(inputRef.current.value)} name={name} id={id}>\r\n\t\t\t\t{optionsList}\r\n\t\t\t</select>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SelectInput;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './css/result.css';\r\n\r\nconst Result = ({ fipType, fipTypeMg, brandName, weight, unit }) => {\r\n\t// Wet & dry FIP without neurological or ocular symptoms, the recommended dosage is 5mg (GS) x weight (kg) / GS concentration per 1mL = dose per 24 hr.\r\n\t// Neurological and Ocular FIP cats require 7mg/kg MINIMUM, and can go as high as 10mg/kg for extreme ocular or neurological cases.\r\n\r\n\t// const [ brand, setBrand ] = useState(brandName.value);\r\n\t// const [ price, setPrice ] = useState(brandName.price);\r\n\tconst [ dailyDosage, setDailyDosage ] = useState();\r\n\tconst [ numOfVials, setNumOfVials ] = useState();\r\n\tconst [ totalPrice, setTotalPrice ] = useState();\r\n\r\n\tconst checkNum = function(num) {\r\n\t\tif (isFinite(num)) {\r\n\t\t\treturn num.toLocaleString();\r\n\t\t} else {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tlet brand = brandName.value;\r\n\t\t\tlet price = brandName.price;\r\n\t\t\tlet dailyDosageAmt;\r\n\t\t\tlet numOfVialsAmt;\r\n\t\t\tlet totalPriceAmt;\r\n\t\t\tif (unit === 'lbs') {\r\n\t\t\t\tdailyDosageAmt = Math.round((fipTypeMg * (weight * 0.45359237) / brand + Number.EPSILON) * 100) / 100;\r\n\t\t\t} else {\r\n\t\t\t\tdailyDosageAmt = Math.round((fipTypeMg * weight / brand + Number.EPSILON) * 100) / 100;\r\n\t\t\t}\r\n\r\n\t\t\t//Num of Vials\r\n\t\t\tnumOfVialsAmt = Math.round(dailyDosageAmt * 84 / 5);\r\n\r\n\t\t\t//Total Price\r\n\t\t\ttotalPriceAmt = Math.round(numOfVialsAmt * price);\r\n\r\n\t\t\tsetDailyDosage(dailyDosageAmt);\r\n\t\t\tsetNumOfVials(numOfVialsAmt);\r\n\t\t\tsetTotalPrice(totalPriceAmt);\r\n\r\n\t\t\t// setBrand(brandName.value);\r\n\t\t\t// setPrice(brandName.price);\r\n\t\t\tconsole.log('fipType: ', fipType);\r\n\t\t\tconsole.log('fipTypeMg: ', fipTypeMg);\r\n\t\t\tconsole.log('weight: ', weight);\r\n\t\t\tconsole.log('brandName: ', brandName);\r\n\t\t\tconsole.log('brand: ', brand);\r\n\t\t\tconsole.log('unit: ', unit);\r\n\t\t\tconsole.log('-------------------------');\r\n\t\t},\r\n\t\t[ fipType, fipTypeMg, brandName, weight, unit ]\r\n\t);\r\n\r\n\tconst resultBrandName = (\r\n\t\t<span className=\"additional-info\">\r\n\t\t\t* Using {brandName.name} priced at ${brandName.price} per vial\r\n\t\t</span>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className=\"result-wrapper a\">\r\n\t\t\t<div className=\"result-sections-container inner-wrapper\">\r\n\t\t\t\t<div id=\"daily-dosage\" className=\"result-section\">\r\n\t\t\t\t\t<h2 className=\"title\"> Daily Dosage of GS</h2>\r\n\t\t\t\t\t<div className=\"results-container\">\r\n\t\t\t\t\t\t<div className=\"result-value\">{checkNum(dailyDosage)}ml</div>\r\n\t\t\t\t\t\t<div className=\"result-description\">\r\n\t\t\t\t\t\t\tGiven to your cat in mL (milliliters) via injection per every 24 hours\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div id=\"number-of-vials\" className=\"result-section\">\r\n\t\t\t\t\t<h2 className=\"title\"> Est. Number of Vials</h2>\r\n\t\t\t\t\t<div className=\"results-container\">\r\n\t\t\t\t\t\t<div className=\"result-value\">{checkNum(numOfVials)}</div>\r\n\t\t\t\t\t\t<div className=\"result-description\">\r\n\t\t\t\t\t\t\t<span> Over 84 days of treatment</span>\r\n\t\t\t\t\t\t\t<span className=\"additional-info\">\r\n\t\t\t\t\t\t\t\t* This value is always rounded up as you cannot purchase a partial vial\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div id=\"total-cost\" className=\"result-section\">\r\n\t\t\t\t\t<h2 className=\"title\">Est. Cost Of Treatment</h2>\r\n\t\t\t\t\t<div className=\"results-container\">\r\n\t\t\t\t\t\t<div className=\"result-value\">{checkNum(totalPrice)}</div>\r\n\t\t\t\t\t\t<div className=\"result-description\">Per 12 week period {brandName.name && resultBrandName}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Result;\r\n","import React from 'react';\r\nimport MetricSwitcher from '../../inputs/metricSwitcher/metricSwitcher';\r\nimport './css/group.css';\r\n\r\nconst Group = (props) => {\r\n\treturn (\r\n\t\t<div id={props.id} className=\"group-wrapper\">\r\n\t\t\t<h2 className=\"group-title\">{props.title}</h2>\r\n\t\t\t{props.description && <p className=\"group-description\">{props.description}</p>}\r\n\t\t\t<div id={`${props.id}-options`} className=\"group-options\">\r\n\t\t\t\t{props.children}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Group;\r\n","const typeData = [\r\n\t{\r\n\t\tid      : 'WetfipTypeMg',\r\n\t\tname    : 'type-of-fip',\r\n\t\ttype    : 'Wet FIP ',\r\n\t\thtmlFor : 'WetfipTypeMg'\r\n\t},\r\n\t{\r\n\t\tid      : 'DryfipTypeMg',\r\n\t\tname    : 'type-of-fip',\r\n\t\ttype    : 'Dry FIP ',\r\n\t\thtmlFor : 'DryfipTypeMg'\r\n\t},\r\n\t{\r\n\t\tid      : 'OcularfipTypeMg',\r\n\t\tname    : 'type-of-fip',\r\n\t\ttype    : 'Ocular FIP ',\r\n\t\thtmlFor : 'OcularfipTypeMg'\r\n\t},\r\n\t{\r\n\t\tid      : 'NeurofipTypeMg',\r\n\t\tname    : 'type-of-fip',\r\n\t\ttype    : 'Neuro FIP ',\r\n\t\thtmlFor : 'NeurofipTypeMg'\r\n\t}\r\n];\r\n\r\nexport default typeData;\r\n","const brandData = [\r\n\t{\r\n\t\tid       : 'oscar',\r\n\t\ttype     : 'Oscar',\r\n\t\tprice    : 80,\r\n\t\tunit     : 'vial',\r\n\t\tmgAmount : 15\r\n\t},\r\n\t{\r\n\t\tid       : 'capella',\r\n\t\ttype     : 'Capella',\r\n\t\tprice    : 90,\r\n\t\tunit     : 'vial',\r\n\t\tmgAmount : 15\r\n\t},\r\n\t{\r\n\t\tid       : 'kitty-care ',\r\n\t\ttype     : 'Kitty Care ',\r\n\t\tprice    : 90,\r\n\t\tunit     : 'vial',\r\n\t\tmgAmount : 15\r\n\t},\r\n\t{\r\n\t\tid       : 'pine',\r\n\t\ttype     : 'Pine',\r\n\t\tprice    : 100,\r\n\t\tunit     : 'vial',\r\n\t\tmgAmount : 15\r\n\t},\r\n\t{\r\n\t\tid    : 'pine-tablets',\r\n\t\ttype  : 'Pine Tablets',\r\n\t\tprice : 135,\r\n\t\tunit  : 'tablet'\r\n\t\t// mgAmount : 'Tablets'\r\n\t},\r\n\t{\r\n\t\tid       : 'aura-15',\r\n\t\ttype     : 'Aura (15)',\r\n\t\tprice    : 115,\r\n\t\tunit     : 'vial',\r\n\t\tmgAmount : 15\r\n\t},\r\n\t{\r\n\t\tid       : 'aura-17',\r\n\t\ttype     : 'Aura (17)',\r\n\t\tprice    : 125,\r\n\t\tunit     : 'vial',\r\n\t\tmgAmount : 17\r\n\t},\r\n\t{\r\n\t\tid       : 'aura-20',\r\n\t\ttype     : 'Aura (20)',\r\n\t\tprice    : 135,\r\n\t\tunit     : 'vial',\r\n\t\tmgAmount : 20\r\n\t},\r\n\t{\r\n\t\tid       : 'dawn',\r\n\t\ttype     : 'Dawn',\r\n\t\tprice    : 145,\r\n\t\tunit     : 'vial',\r\n\t\tmgAmount : 15\r\n\t},\r\n\r\n\t{\r\n\t\tid       : 'brava',\r\n\t\ttype     : 'Brava',\r\n\t\tprice    : 115,\r\n\t\tunit     : 'vial',\r\n\t\tmgAmount : 15\r\n\t},\r\n\r\n\t{\r\n\t\tid       : 'ruby',\r\n\t\ttype     : 'Ruby',\r\n\t\tprice    : 110,\r\n\t\tunit     : 'vial',\r\n\t\tmgAmount : 15\r\n\t},\r\n\r\n\t{\r\n\t\tid       : 'blue-hero',\r\n\t\ttype     : 'Blue Hero',\r\n\t\tprice    : 120,\r\n\t\tunit     : 'vial',\r\n\t\tmgAmount : 15\r\n\t},\r\n\t{\r\n\t\tid       : 'white-hero',\r\n\t\ttype     : 'White Hero',\r\n\t\tprice    : 358,\r\n\t\tunit     : 'vial',\r\n\t\tmgAmount : 16.5\r\n\t},\r\n\t{\r\n\t\tid       : 'mutian',\r\n\t\ttype     : 'Mutian',\r\n\t\tprice    : 358,\r\n\t\tunit     : 'vial',\r\n\t\tmgAmount : 16.7\r\n\t},\r\n\r\n\t{\r\n\t\tid    : 'hero-tablets',\r\n\t\ttype  : 'Hero Tablets',\r\n\t\tprice : 358,\r\n\t\tunit  : 'tablet'\r\n\t\t// mgAmount : 'Tablets'\r\n\t},\r\n\r\n\t{\r\n\t\tid    : 'mutian-capsules',\r\n\t\ttype  : 'Mutian Capsules',\r\n\t\tprice : 358,\r\n\t\tunit  : 'capsule'\r\n\t\t// mgAmount : 'Capsules'\r\n\t}\r\n];\r\n\r\nexport default brandData;\r\n","import React, { useState, useEffect } from 'react';\r\nimport RadioInput from '../inputs/radioInput/radioInput';\r\nimport NumberInput from '../inputs/numberInput/numberInput';\r\nimport MetricSwitcher from '../inputs/metricSwitcher/metricSwitcher';\r\nimport SelectInput from '../inputs/selectInput/selectInput';\r\nimport Result from '../../components/result/result';\r\nimport Group from './group/group';\r\nimport typeData from './group/groupData/typeData';\r\nimport brandData from './group/groupData/brandData';\r\nimport './css/calculator.css';\r\n\r\nconst Calculator = () => {\r\n\tconst [ fipType, setfipType ] = useState('Wet');\r\n\tconst [ fipTypeMg, setfipTypeMg ] = useState(1);\r\n\tconst [ weight, setWeight ] = useState(0);\r\n\tconst [ brand, setBrand ] = useState({ value: 0, price: 0 });\r\n\tconst [ isLBS, setIsLBS ] = useState('lbs');\r\n\r\n\t//groups\r\n\r\n\tlet group_fipType = (\r\n\t\t<Group\r\n\t\t\tid=\"type-of-fip\"\r\n\t\t\ttitle=\"Type of FIP\"\r\n\t\t\t// description=\"Select the type of FIP\"\r\n\t\t\tleftMetric={'lbs'}\r\n\t\t\trightMetric={'kgs'}\r\n\t\t>\r\n\t\t\t<div className=\"fip-type-options-container\">\r\n\t\t\t\t<div className=\"group-description\">Select the type of FIP</div>\r\n\t\t\t\t<div className=\"fip-options\">\r\n\t\t\t\t\t{typeData.map((type) => (\r\n\t\t\t\t\t\t<RadioInput\r\n\t\t\t\t\t\t\tonClick={setfipType}\r\n\t\t\t\t\t\t\tid={type.id}\r\n\t\t\t\t\t\t\tname={type.name}\r\n\t\t\t\t\t\t\ttype={type.type}\r\n\t\t\t\t\t\t\tmgAmount={type.mgAmount}\r\n\t\t\t\t\t\t\tvalue={type.type}\r\n\t\t\t\t\t\t\telement=\"single\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"unit-container\">\r\n\t\t\t\t<div className=\"group-description\">Select Unit Amount</div>\r\n\t\t\t\t<SelectInput\r\n\t\t\t\t\tonChange={setfipTypeMg}\r\n\t\t\t\t\tsuffix=\"mg\"\r\n\t\t\t\t\tunit={isLBS}\r\n\t\t\t\t\toptions={[ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 ]}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</Group>\r\n\t);\r\n\r\n\tlet group_cat_weight = (\r\n\t\t<Group\r\n\t\t\tid=\"cat-weight\"\r\n\t\t\ttitle=\"Cat's Weight\"\r\n\t\t\tdescription=\"Enter your cat's weight below\"\r\n\t\t\tleftMetric={'lbs'}\r\n\t\t\trightMetric={'kgs'}\r\n\t\t>\r\n\t\t\t<div className=\"metric-value\">\r\n\t\t\t\t<NumberInput\r\n\t\t\t\t\tonChange={setWeight}\r\n\t\t\t\t\tid=\"cat-weight-value\"\r\n\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\ttype=\"Cat Weight\"\r\n\t\t\t\t\tmgAmount=\"\"\r\n\t\t\t\t\thtmlFor=\"forname\"\r\n\t\t\t\t\tvalue={weight}\r\n\t\t\t\t\tmin=\"0\"\r\n\t\t\t\t\tmax=\"30\"\r\n\t\t\t\t\t// placeholder=\"6\"\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<MetricSwitcher onClick={setIsLBS} leftMetric={'lbs'} rightMetric={'kgs'} />\r\n\t\t\t</div>\r\n\t\t</Group>\r\n\t);\r\n\r\n\tlet group_brands = (\r\n\t\t<Group\r\n\t\t\tid=\"brand-concentration-of-gs\"\r\n\t\t\ttitle=\"Brand & Concentration of GS\"\r\n\t\t\tdescription=\"Select the brand of GS you will be using\"\r\n\t\t\ta\r\n\t\t>\r\n\t\t\t{brandData.map((type) => (\r\n\t\t\t\t<RadioInput\r\n\t\t\t\t\tonClick={setBrand}\r\n\t\t\t\t\tid={type.id}\r\n\t\t\t\t\tname={'brand-concentration-of-gs'}\r\n\t\t\t\t\ttype={type.type}\r\n\t\t\t\t\tmgAmount={type.mgAmount}\r\n\t\t\t\t\tvalue={type.mgAmount}\r\n\t\t\t\t\tprice={type.price}\r\n\t\t\t\t\tunit={type.unit}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</Group>\r\n\t);\r\n\r\n\t// useEffect(\r\n\t// \t() => {\r\n\t// \t\tconsole.log(unit);\r\n\t// \t},\r\n\t// \t[ unit ]\r\n\t// );\r\n\treturn (\r\n\t\t<div className=\"calculator-wrapper\">\r\n\t\t\t<div className=\"group-container inner-wrapper\">\r\n\t\t\t\t<div className=\"group-container_row\">\r\n\t\t\t\t\t{group_fipType} {group_cat_weight}\r\n\t\t\t\t</div>\r\n\t\t\t\t{group_brands}\r\n\t\t\t</div>\r\n\r\n\t\t\t<Result\r\n\t\t\t\tfipType={fipType}\r\n\t\t\t\tfipTypeMg={fipTypeMg}\r\n\t\t\t\t// brand={2}\r\n\t\t\t\tbrandName={brand}\r\n\t\t\t\tweight={weight}\r\n\t\t\t\tunit={isLBS}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Calculator;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Calculator from './components/calculator/calculator';\r\nimport Result from './components/result/result';\r\nimport './css/app.css';\r\n\r\nfunction App() {\r\n\tconst [ calcData, setCalcData ] = useState('initial');\r\n\r\n\treturn (\r\n\t\t<div className=\"app\">\r\n\t\t\t<section id=\"description\">\r\n\t\t\t\t<div className=\"inner-wrapper\">\r\n\t\t\t\t\t<div className=\"intro-container\">\r\n\t\t\t\t\t\t<h1 className=\"\">Weight-Based Dose Calculator</h1>\r\n\t\t\t\t\t\t<div className=\"calculator-description\">\r\n\t\t\t\t\t\t\t<p>Below is a simple calculator for figuring out your dosage for your kitty.</p>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\tThroughout the course of treatment, remember to weigh your cat frequently and increase\r\n\t\t\t\t\t\t\t\this/her dose accordingly with weight gain. Also, if you change brands, you will need to\r\n\t\t\t\t\t\t\t\trecalculate due to the difference in concentration.\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\tPlease contact an FIP Warrior admin for assistance in determining the appropriate\r\n\t\t\t\t\t\t\t\tstarting dose for your cat.\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div id=\"instructions\" className=\"intro-container\">\r\n\t\t\t\t\t\t<h2>Instructions</h2>\r\n\t\t\t\t\t\t<ol>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\tChoose <span>FIP Type</span> and <span>Unit Amount</span>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\tEnter your <span>Cat's Weight</span> in LBS or KGS\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\tSelect your <span>Brand of GS</span>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>View your results below</li>\r\n\t\t\t\t\t\t</ol>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t\t<section id=\"calculator\">\r\n\t\t\t\t<div className=\"\">\r\n\t\t\t\t\t<Calculator />\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}